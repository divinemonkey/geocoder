{
  "name": "node-postal",
  "version": "0.3.0",
  "author": {
    "name": "Al Barrentine",
    "url": "@thatdatabaseguy"
  },
  "description": "International address parsing/normalization at C speed",
  "main": "index.js",
  "license": "MIT",
  "keywords": [
    "libpostal",
    "addresses",
    "address parsing",
    "i18n",
    "geo",
    "deduping",
    "machine learning",
    "natural language processing",
    "nlp",
    "c"
  ],
  "homepage": "https://github.com/openvenues/node-postal",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/openvenues/node-postal.git"
  },
  "dependencies": {
    "bindings": "^1.2.1",
    "nan": "^2.1.0"
  },
  "devDependencies": {
    "mocha": "^2.3.4",
    "simplesets": "^1.2.0"
  },
  "scripts": {
    "install": "(node-gyp rebuild) || (exit 0)",
    "test": "mocha ./test"
  },
  "gypfile": true,
  "gitHead": "dfb8c5bd567e8088bfaae3e5ab0e28d6579b3e0e",
  "readme": "node-postal\n-----------\n\n[![Build Status](https://travis-ci.org/openvenues/node-postal.svg?branch=master)](https://travis-ci.org/openvenues/node-postal)\n\nThese are the NodeJS bindings to [libpostal](https://github.com/openvenues/libpostal), a fast, multilingual NLP library for parsing/normalizing physical addresses. libpostal is written in C because virtually every other language can bind to C.\n\nUsage\n-----\n\n```node\nvar postal = require('node-postal');\n\n// Expansion API\npostal.expand.expand_address('V XX Settembre, 20');\n\n// Parser API\npostal.parser.parse_address('Mayfield 688 Franklin Ave, Crown Heights, Brooklyn, NY 11238');\n```\n\nInstallation\n------------\n\nBefore using the Node bindings, you must install the libpostal C library. Make sure you have the following prerequisites:\n\n**On Ubuntu/Debian**\n```\nsudo apt-get install curl libsnappy-dev autoconf automake libtool pkg-config\n```\n\n**On CentOS/RHEL**\n```\nsudo yum install snappy snappy-devel autoconf automake libtool pkgconfig\n```\n\n**On Mac OSX**\n```\nbrew install snappy autoconf automake libtool pkg-config\n```\n\n**Installing libpostal**\n\n```\ngit clone https://github.com/openvenues/libpostal\ncd libpostal\n./bootstrap.sh\n./configure --datadir=[...some dir with a few GB of space...]\nmake\nsudo make install\n\n# On Linux it's probably a good idea to run\nsudo ldconfig\n```\n\n**Installing node-gyp on Linux (Ubuntu)**\n\nFirst make sure you have:\n\n1. gcc, g++ and make (```sudo apt-get install build-essential``` on Ubuntu)\n2. NodeJS with all the development headers (if using a package manager like apt-get, follow the instructions here: https://nodejs.org/en/download/package-manager/)\n3. python 2.7\n\nThen install node-gyp system-wide:\n\n```\nsudo npm install -g node-gyp\n```\n\n**Installing the Node bindings**\n\n```\nnpm install openvenues/node-postal\n```\n\nCompatibility\n-------------\n\nnode-postal is tested on most major versions of Node (0.10+) in continuous integration. The C++ bindings are written using [Nan](https://github.com/nodejs/nan), which abstracts the API changes across various versions of V8.\n\nIf you're having trouble compiling, post a Github issue with your OS and Node versions along with the output of npm install / node-gyp rebuild.\n\nTests\n-----\n\nTo run the unit tests:\n\n```\nnpm test\n```\n\nSpecial Thanks\n--------------\n\nLucas Hrabovsky (https://github.com/imlucas) for information and examples of repos using Nan, node-gyp, etc.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/openvenues/node-postal/issues"
  },
  "_id": "node-postal@0.3.0",
  "_shasum": "fb22399438448860ac5275177c63d05de4e8d9fd",
  "_from": "openvenues/node-postal#dfb8c5b",
  "_resolved": "git://github.com/openvenues/node-postal.git#dfb8c5bd567e8088bfaae3e5ab0e28d6579b3e0e"
}
